[
  {
    "ContainingType": "ToDoApp.API.Controllers.TestController",
    "Method": "Greet",
    "RelativePath": "Test",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoApp.API.Controllers.ToDoServiceController",
    "Method": "CreateToDo",
    "RelativePath": "ToDoService/CreateToDo",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "toDo",
        "Type": "ToDoApp.API.Models.ToDo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoApp.API.Controllers.ToDoServiceController",
    "Method": "DeleteToDo",
    "RelativePath": "ToDoService/DeleteToDo",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoApp.API.Controllers.ToDoServiceController",
    "Method": "GetToDo",
    "RelativePath": "ToDoService/GetToDo",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "System.Text.Json.Nodes.JsonObject",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDoApp.API.Models.ToDo",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDoApp.API.Controllers.ToDoServiceController",
    "Method": "GetToDos",
    "RelativePath": "ToDoService/GetToDos",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[ToDoApp.API.Models.ToDo, ToDoApp.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDoApp.API.Controllers.ToDoServiceController",
    "Method": "UpdateToDo",
    "RelativePath": "ToDoService/UpdateToDo",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "toDo",
        "Type": "ToDoApp.API.Models.ToDo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoApp.API.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ToDoApp.API.WeatherForecast, ToDoApp.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]